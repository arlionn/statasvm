#!/bin/bash
# generate a .pkg file
# see Stata's [R] net for reference on this format

cd $(dirname $1)
PKG=$(basename $1 .pkg)
DESCRIPTION=$2
AUTHOR=$3

(
# state the .pkg version number
echo v 3

# package description
echo d $PKG
echo d $DESCRIPTION
echo d $AUTHOR
# including Distribution-Date in that format enables 'adoupdate'
# See "[R]->net->Format of content and package-description files"
echo d Distribution-Date: `date +%Y%m%d`
echo

# package contents
#
# we blindly index all the files (-type f) in the folder
# BUT files under bin/ are special: they are platform-specific binaries:
# e.g. bin/MACINTEL64/file is written as 'g MACINTEL64 $PKG/bin/MACINTEL64/file
# additionally, any .plugin files found under bin/ are duplicated to 'h file.plugin'
# which tells Stata "expect file.plugin from some platform specific 'g' line".
# (we only do 'h' for .plugins; on Windows we bundle .dlls but not on Linux or Mac)
#
# Capitalization (writing F instead of f or G instead of G) controls where and when files are installed.
# Capitalized files are installed to the adopath at "net install" time;
# Lower-case files are considered "ancillary" and only come on "net get" and end up in the current directory.
# Most of our files are the former.
#
if [ -d "$PKG" ]; then
  find "$PKG" \( -name "bin" -prune -o -name "ancillary" -prune -o -true \) -type f | awk '{ print "F " $1 }'
  if [ -d "$PKG/bin" ]; then
    find "$PKG/bin" -mindepth 2 -maxdepth 3 -type f  | awk '{ split($1,A,"/"); print "G " A[3] " " $1 }'
    find "$PKG/bin" -type f -name "*.plugin" -exec basename {} \; | sort | uniq | awk '{ print "h " $1 }'
  fi
  if [ -d "$PKG/ancillary" ]; then
    find "$PKG/ancillary" \( -name "bin" -prune -o -true \) -type f | awk '{ print "f " $1 }'
  fi
fi
) > $PKG.pkg
