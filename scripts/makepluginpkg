#!/bin/bash

cd $(dirname $1)
PKG=$(basename $1 .pkg)
DESCRIPTION=$2
AUTHOR=$3

(
# state the .pkg version number
echo v 3

# package description
echo d $PKG
echo d $DESCRIPTION
echo d $AUTHOR
echo

# package contents
#
# we blindly index all the files (-type f) in the folder
# BUT files under bin/ are special: they are platform-specific binaries:
# bin/MACINTEL64/file is written as 'g MACINTEL64 $PKG/bin/MACINTEL64/file
# additionally, any .plugin files found under .bin are marked 'h file.plugin'
# which makes Stata bail if it can't find a matching one in the platform list,
# since .plugin modules are the goal of these packaging shennanigans
# (however, there may be other files, e.g. .dlls, which should not force a failure )
#
# note what capitalization means to .pkg: it forces the file to go into the adopath; otherwise, files that are not in the special magic list are "ancillary" and only come with "net get" and end up in the current directory
#  most of our files are. ancillary files will go under ancillary/, if any exist.
#
if [ -d "$PKG" ]; then
  find "$PKG" \( -name "bin" -prune -o -name "ancillary" -prune -o -true \) -type f | awk '{ print "F " $1 }'
  if [ -d "$PKG/bin" ]; then
    find "$PKG/bin" -mindepth 2 -maxdepth 3 -type f  | awk '{ split($1,A,"/"); print "G " A[3] " " $1 }'
    find "$PKG/bin" -type f -name "*.plugin" -exec basename {} \; | sort | uniq | awk '{ print "h " $1 }'
  fi
  if [ -d "$PKG/ancillary" ]; then
    find "$PKG/ancillary" \( -name "bin" -prune -o -true \) -type f | awk '{ print "f " $1 }'
  fi
fi
) > $PKG.pkg
