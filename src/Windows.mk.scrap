
  
  ## TODO: rather than make the user choose, find where VS is installed by looking for VS120COMNTOOLS, VS110COMNTOOLS, VS100COMNTOOLS, VS90COMNTOOLS, ... We can exploit this to maybe auto-run vcvarsall.bat, or at least to give a better error message.
  
  # there's %VCINSTALLDIR%, but it's only defined *after* %VCINSTALLDIR%\vcvarsall.bat is run, so it's useless.
  
  ## the goal here is to locate VCVARS
  #ifdef VS120COMNTOOLS
  #  VCVARS:=$(VS120COMNTOOLS)
  #else ifdef VS110COMNTOOLS
  #  VCVARS:=$(VS110COMNTOOLS)
  #else ifdef VS100COMNTOOLS
  #  VCVARS:=$(VS100COMNTOOLS)
  #else ifdef VS90COMNTOOLS
  #  VCVARS:=$(VS90COMNTOOLS)
  #endif
  # 
  #ifdef VCVARS
  #  VCVARS:=$(wildcard $(VS)/../../VC/vcvarsall.bat)
  #endif
  #
  ## 
  #ifeq ($(ARCH),x86_64)
  #  VCVARS:=$(VCVARS) amd64
  #else
  #  # assumption: vcvarsall.bat defaults to 32 bit
  #endif
  
  # ^ the main trouble with this is that you cannot source variables into a makefile, and vcvarsall.bat is precisely a script that needs sourcing. The best you can do is a recursive make prefixed by the script to source.
  # though the adventerous have invented some (POSIX-only) solutions: http://stackoverflow.com/questions/7507810/howto-source-a-script-from-makefile